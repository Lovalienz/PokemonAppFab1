// Generated by Dagger (https://dagger.dev).
package com.poke.pokemonapp.di;

import com.poke.pokemonapp.data.dataSource.remote.PokemonRemoteDataSourceImpl;
import com.poke.pokemonapp.domain.repositories.PokemonRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class RepositoryModule_ProvidePokemonRepositoryFactory implements Factory<PokemonRepository> {
  private final Provider<PokemonRemoteDataSourceImpl> dataSourceProvider;

  public RepositoryModule_ProvidePokemonRepositoryFactory(
      Provider<PokemonRemoteDataSourceImpl> dataSourceProvider) {
    this.dataSourceProvider = dataSourceProvider;
  }

  @Override
  public PokemonRepository get() {
    return providePokemonRepository(dataSourceProvider.get());
  }

  public static RepositoryModule_ProvidePokemonRepositoryFactory create(
      Provider<PokemonRemoteDataSourceImpl> dataSourceProvider) {
    return new RepositoryModule_ProvidePokemonRepositoryFactory(dataSourceProvider);
  }

  public static PokemonRepository providePokemonRepository(PokemonRemoteDataSourceImpl dataSource) {
    return Preconditions.checkNotNullFromProvides(RepositoryModule.INSTANCE.providePokemonRepository(dataSource));
  }
}
