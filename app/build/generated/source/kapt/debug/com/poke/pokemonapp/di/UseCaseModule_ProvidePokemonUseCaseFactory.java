// Generated by Dagger (https://dagger.dev).
package com.poke.pokemonapp.di;

import com.poke.pokemonapp.domain.repositories.PokemonRepository;
import com.poke.pokemonapp.domain.useCases.pokemonsUseCases.PokemonUseCase;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class UseCaseModule_ProvidePokemonUseCaseFactory implements Factory<PokemonUseCase> {
  private final Provider<PokemonRepository> pokemonRepositoryProvider;

  public UseCaseModule_ProvidePokemonUseCaseFactory(
      Provider<PokemonRepository> pokemonRepositoryProvider) {
    this.pokemonRepositoryProvider = pokemonRepositoryProvider;
  }

  @Override
  public PokemonUseCase get() {
    return providePokemonUseCase(pokemonRepositoryProvider.get());
  }

  public static UseCaseModule_ProvidePokemonUseCaseFactory create(
      Provider<PokemonRepository> pokemonRepositoryProvider) {
    return new UseCaseModule_ProvidePokemonUseCaseFactory(pokemonRepositoryProvider);
  }

  public static PokemonUseCase providePokemonUseCase(PokemonRepository pokemonRepository) {
    return Preconditions.checkNotNullFromProvides(UseCaseModule.INSTANCE.providePokemonUseCase(pokemonRepository));
  }
}
