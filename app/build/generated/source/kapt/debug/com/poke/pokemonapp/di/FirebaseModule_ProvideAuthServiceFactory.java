// Generated by Dagger (https://dagger.dev).
package com.poke.pokemonapp.di;

import com.google.firebase.auth.FirebaseAuth;
import com.poke.pokemonapp.data.dataSource.remote.service.FirebaseAuthService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class FirebaseModule_ProvideAuthServiceFactory implements Factory<FirebaseAuthService> {
  private final Provider<FirebaseAuth> firebaseAuthProvider;

  public FirebaseModule_ProvideAuthServiceFactory(Provider<FirebaseAuth> firebaseAuthProvider) {
    this.firebaseAuthProvider = firebaseAuthProvider;
  }

  @Override
  public FirebaseAuthService get() {
    return provideAuthService(firebaseAuthProvider.get());
  }

  public static FirebaseModule_ProvideAuthServiceFactory create(
      Provider<FirebaseAuth> firebaseAuthProvider) {
    return new FirebaseModule_ProvideAuthServiceFactory(firebaseAuthProvider);
  }

  public static FirebaseAuthService provideAuthService(FirebaseAuth firebaseAuth) {
    return Preconditions.checkNotNullFromProvides(FirebaseModule.INSTANCE.provideAuthService(firebaseAuth));
  }
}
