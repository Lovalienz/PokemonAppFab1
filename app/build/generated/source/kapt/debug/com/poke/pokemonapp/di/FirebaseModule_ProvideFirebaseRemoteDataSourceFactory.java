// Generated by Dagger (https://dagger.dev).
package com.poke.pokemonapp.di;

import com.poke.pokemonapp.data.dataSource.remote.FirebaseRemoteDataSource;
import com.poke.pokemonapp.data.dataSource.remote.service.FireStoreService;
import com.poke.pokemonapp.data.dataSource.remote.service.FirebaseAuthService;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.Preconditions;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata("javax.inject.Singleton")
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava",
    "cast"
})
public final class FirebaseModule_ProvideFirebaseRemoteDataSourceFactory implements Factory<FirebaseRemoteDataSource> {
  private final Provider<FireStoreService> fireStoreServiceProvider;

  private final Provider<FirebaseAuthService> authServiceProvider;

  public FirebaseModule_ProvideFirebaseRemoteDataSourceFactory(
      Provider<FireStoreService> fireStoreServiceProvider,
      Provider<FirebaseAuthService> authServiceProvider) {
    this.fireStoreServiceProvider = fireStoreServiceProvider;
    this.authServiceProvider = authServiceProvider;
  }

  @Override
  public FirebaseRemoteDataSource get() {
    return provideFirebaseRemoteDataSource(fireStoreServiceProvider.get(), authServiceProvider.get());
  }

  public static FirebaseModule_ProvideFirebaseRemoteDataSourceFactory create(
      Provider<FireStoreService> fireStoreServiceProvider,
      Provider<FirebaseAuthService> authServiceProvider) {
    return new FirebaseModule_ProvideFirebaseRemoteDataSourceFactory(fireStoreServiceProvider, authServiceProvider);
  }

  public static FirebaseRemoteDataSource provideFirebaseRemoteDataSource(
      FireStoreService fireStoreService, FirebaseAuthService authService) {
    return Preconditions.checkNotNullFromProvides(FirebaseModule.INSTANCE.provideFirebaseRemoteDataSource(fireStoreService, authService));
  }
}
